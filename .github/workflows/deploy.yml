name: Deploy Go App (Matrix with per-instance DB)

on:
  push:
    branches:
      - main
      - 'feature/*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: [EC2_1, EC2_2, EC2_3, EC2_4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Go binary
        run: |
          go mod tidy
          go build -o app main.go

          mkdir -p static
          if [ "${{ github.ref_name }}" = "main" ]; then
            cp index.html static/index.html
          else
            mkdir -p static/test/feature/${{ github.ref_name }}
            cp index.html static/test/feature/${{ github.ref_name }}/index.html
          fi

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets[format('{0}_HOST', matrix.instance)] }}
          username: ${{ secrets[format('{0}_USER', matrix.instance)] }}
          key: ${{ secrets[format('{0}_SSH_KEY', matrix.instance)] }}
          source: "app,static/*"
          target: "~/app"

      - name: Restart app on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets[format('{0}_HOST', matrix.instance)] }}
          username: ${{ secrets[format('{0}_USER', matrix.instance)] }}
          key: ${{ secrets[format('{0}_SSH_KEY', matrix.instance)] }}
          script_stop: false
          script: |
            pkill app || true
            cd ~/app
            # Export per-instance DB secrets
            export DB_HOST=${{ secrets[format('{0}_DB_HOST', matrix.instance)] }}
            export DB_NAME=${{ secrets[format('{0}_DB_NAME', matrix.instance)] }}
            export DB_USER=${{ secrets[format('{0}_DB_USER', matrix.instance)] }}
            export DB_PASSWORD=${{ secrets[format('{0}_DB_PASSWORD', matrix.instance)] }}
            export DB_SSLMODE=${{ secrets[format('{0}_DB_SSLMODE', matrix.instance)] }}
            nohup ./app > app.log 2>&1 &
