name: Deploy Go App

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy (feature branch only)"
        required: true
      deploy_to_EC2_1:
        description: "Deploy to EC2_1"
        type: boolean
        default: false
      deploy_to_EC2_2:
        description: "Deploy to EC2_2"
        type: boolean
        default: false
      deploy_to_EC2_3:
        description: "Deploy to EC2_3"
        type: boolean
        default: false
      deploy_to_EC2_4:
        description: "Deploy to EC2_4"
        type: boolean
        default: false

jobs:
  # Auto-deploy main branch to all prod instances
  deploy-main:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: [EC2_1, EC2_2, EC2_3, EC2_4]

    steps:
      - uses: actions/checkout@v4

      - name: Build main
        run: |
          go mod tidy
          safe_branch="main"
          mkdir -p build/${safe_branch}/static
          go build -o build/${safe_branch}/app-${safe_branch} main.go
          cp static/index.html build/${safe_branch}/static/index.html

      - name: Upload to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets[format('{0}_HOST', matrix.instance)] }}
          username: ${{ secrets[format('{0}_USER', matrix.instance)] }}
          key: ${{ secrets[format('{0}_SSH_KEY', matrix.instance)] }}
          source: "build/*"
          target: "~/app/"

      - name: Restart service
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets[format('{0}_HOST', matrix.instance)] }}
          username: ${{ secrets[format('{0}_USER', matrix.instance)] }}
          key: ${{ secrets[format('{0}_SSH_KEY', matrix.instance)] }}
          script: |
            safe_branch="main"

            # Inject DB secrets into systemd drop-in
            sudo mkdir -p /etc/systemd/system/location-tracker@${safe_branch}.d
            sudo bash -c "cat > /etc/systemd/system/location-tracker@${safe_branch}.d/env.conf <<EOF
            [Service]
            Environment=DB_HOST=${{ secrets[format('{0}_DB_HOST', matrix.instance)] }}
            Environment=DB_NAME=${{ secrets[format('{0}_DB_NAME', matrix.instance)] }}
            Environment=DB_USER=${{ secrets[format('{0}_DB_USER', matrix.instance)] }}
            Environment=DB_PASSWORD=${{ secrets[format('{0}_DB_PASSWORD', matrix.instance)] }}
            Environment=DB_SSLMODE=${{ secrets[format('{0}_DB_SSLMODE', matrix.instance)] }}
            EOF"

            sudo systemctl daemon-reload
            sudo systemctl restart location-tracker@${safe_branch}

  # Manual feature branch deployment
  deploy-feature:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - instance: EC2_1
            deploy: ${{ github.event.inputs.deploy_to_EC2_1 }}
          - instance: EC2_2
            deploy: ${{ github.event.inputs.deploy_to_EC2_2 }}
          - instance: EC2_3
            deploy: ${{ github.event.inputs.deploy_to_EC2_3 }}
          - instance: EC2_4
            deploy: ${{ github.event.inputs.deploy_to_EC2_4 }}

    steps:
      - name: Skip unchecked EC2s
        if: matrix.deploy != 'true'
        run: echo "Skipping ${{ matrix.instance }} for this run"

      - uses: actions/checkout@v4
        if: matrix.deploy == 'true'
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Build feature branch
        if: matrix.deploy == 'true'
        run: |
          branch="${{ github.event.inputs.branch }}"
          safe_branch=$(echo "$branch" | tr '/' '-')
          go mod tidy
          mkdir -p build/${safe_branch}/static
          go build -o build/${safe_branch}/app-${safe_branch} main.go
          cp static/index.html build/${safe_branch}/static/index.html

      - name: Upload to EC2
        if: matrix.deploy == 'true'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets[format('{0}_HOST', matrix.instance)] }}
          username: ${{ secrets[format('{0}_USER', matrix.instance)] }}
          key: ${{ secrets[format('{0}_SSH_KEY', matrix.instance)] }}
          source: "build/*"
          target: "~/app/"

      - name: Restart service
        if: matrix.deploy == 'true'
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets[format('{0}_HOST', matrix.instance)] }}
          username: ${{ secrets[format('{0}_USER', matrix.instance)] }}
          key: ${{ secrets[format('{0}_SSH_KEY', matrix.instance)] }}
          script: |
            branch="${{ github.event.inputs.branch }}"
            safe_branch=$(echo "$branch" | tr '/' '-')

            sudo mkdir -p /etc/systemd/system/location-tracker@${safe_branch}.d
            sudo bash -c "cat > /etc/systemd/system/location-tracker@${safe_branch}.d/env.conf <<EOF
            [Service]
            Environment=DB_HOST=${{ secrets[format('{0}_DB_HOST', matrix.instance)] }}
            Environment=DB_NAME=${{ secrets[format('{0}_DB_NAME', matrix.instance)] }}
            Environment=DB_USER=${{ secrets[format('{0}_DB_USER', matrix.instance)] }}
            Environment=DB_PASSWORD=${{ secrets[format('{0}_DB_PASSWORD', matrix.instance)] }}
            Environment=DB_SSLMODE=${{ secrets[format('{0}_DB_SSLMODE', matrix.instance)] }}
            EOF"

            sudo systemctl daemon-reload
            sudo systemctl restart location-tracker@${safe_branch}
